abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("bottom", legend = c("2.5%", "97.5%", "Median", "Mean"), col = c("blue", "blue", "purple", "red"), lty = c(3, 3, 1, 1), lwd = 2, xpd = TRUE)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
par(xpd = NA)
legend("topright", legend = c("2.5% Quantile", "97.5% Quantile", "Median", "Mean"), col = c("blue", "blue", "purple", "red"), lty = c(3, 3, 1, 1), lwd = 2)
par(xpd = TRUE)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 3, 1, 1), lwd = 2, xpd = TRUE)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 3, 1, 1), lwd = 2, xpd = TRUE)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 3, 1, 1), lwd = 1)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 1)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 1)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 2，cex = 0.8)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 1)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 2,cex = 0.8)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
par(mfrow = c(2,2))
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 2,cex = 0.8)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 2,cex = 0.8)
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="grey",pch=20,main="Posterior mean of theta_j versus ybar_i")
abline(a=0,b=1,col="black")
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="grey",pch=20,main="Posterior mean of theta_i minus ybar_i versus sample size n_i")
abline(h=0,col="black")
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of theta_j versus ybar_i")
abline(a=0,b=1,col="black")
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of theta_i minus ybar_i versus sample size n_i")
abline(h=0,col="black")
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black")
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black")
plot(n.j, post.mean.theta - y.bar.sub, xlab = "Sample size for subsidiary i: n_i", ylab = expression(paste("Posterior mean of (", theta[i], " - ybar_i)")), type = "p", col = "red", pch = 20, main = expression(paste("Posterior mean of (", theta[i], " - ybar_i) versus sample size n_i")))
abline(h = 0, col = "black")
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black")
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black")
plot(n.j, post.mean.theta - y.bar.sub, xlab = "Sample size for subsidiary i: n_i",
ylab = expression(paste("Posterior mean of (", theta[i], " - ", ybar[i], ")")),
type = "p", col = "red", pch = 20,
main = expression(paste("Posterior mean of (", theta[i], " - ", ybar[i], ") versus sample size ", n[i])))
abline(h = 0, col = "black")
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black")
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black")
plot(n.j, post.mean.theta - y.bar.sub, xlab = "Sample size for subsidiary i: n_i",
ylab = expression(paste("Posterior mean of (", theta[i], " - ", ybar[i], ")")),
type = "p", col = "red", pch = 20,
main = expression(paste("Posterior mean of (", theta[i], " - ","y" ,bar[i], ") versus sample size ", n[i])))
abline(h = 0, col = "black")
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black")
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black")
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black", lwd = 2)
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black",lwd = 2)
#### Shrinkage plots
par(mfrow = c(1,2))
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black", lwd = 2)
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black",lwd = 2)
#### Shrinkage plots
par(mfrow = c(2,2))
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black", lwd = 2)
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black",lwd = 2)
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_j - ybar_i)")
abline(a=0,b=1,col="black", lwd = 2)
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black",lwd = 2)
# ”between-subsidiaries” variability: tau^2
mean(other.pars.MCMC[(burnin+1):S,3])
quantile(other.pars.MCMC[(burnin+1):S,3],c(0.025,0.975))
# ”within-subsidiary” variability: sigma^2
mean(other.pars.MCMC[(burnin+1):S,2])
quantile(other.pars.MCMC[(burnin+1):S,2],c(0.025,0.975))
# Plot
plot(density(other.pars.MCMC[(burnin+1):S,2]),col="black",lwd=2,lty=1,xlab="Sigma^2",ylab="Posterior density",main="Sigma^2")
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,2],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,2]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,2]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 2,cex = 0.8)
plot(density(other.pars.MCMC[(burnin+1):S,3]),col="black",lwd=2,lty=1,xlab="Tau^2",ylab="Posterior density",main="Tau^2", xlim=c(-2000,2000))
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.025),col="blue",lwd=2,lty=3)
abline(v=quantile(other.pars.MCMC[(burnin+1):S,3],0.975),col="blue",lwd=2,lty=3)
abline(v=median(other.pars.MCMC[(burnin+1):S,3]),col="purple",lwd=2,lty=1)
abline(v=mean(other.pars.MCMC[(burnin+1):S,3]),col="red",lwd=2,lty=1)
legend("topleft", legend = c("95% Q", "Median", "Mean"), col = c("blue", "purple", "red"), lty = c(3, 1, 1), lwd = 2,cex = 0.8)
#### Shrinkage plots
plot(y.bar.sub,post.mean.theta,xlab="subsidiary-specific sample average (ybar_i)",ylab="Posterior mean of theta_i",type="p",
col="red",pch=20,main="Posterior mean of theta_j vs. ybar_i")
abline(a=0,b=1,col="black", lwd = 2)
plot(n.j,post.mean.theta-y.bar.sub,xlab="Sample size for subsidiary i: n_i",ylab="Posterior mean of theta_i-ybar_i",type="p",
col="red",pch=20,main="Posterior mean of (theta_i - ybar_i) versus sample size n_i")
abline(h=0,col="black",lwd = 2)
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
cat("Frequency of each subsidiaries:\n", table(IBB$subsidiary))
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
cat("Frequency of each subsidiaries:\n", table(IBB$subsidiary))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(MCMCpack)
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
cat("Frequency of each subsidiaries:\n", table(IBB$subsidiary))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(MCMCpack)
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
subsidiary_counts <- table(IBB$subsidiary)
barplot(subsidiary_counts,
col = "lightblue",
border = "black",
names.arg = names(subsidiary_counts),
cex.names = 0.7)
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
subsidiary_counts <- table(IBB$subsidiary)
barplot(subsidiary_counts,
col = "lightblue",
border = "black",
names.arg = names(subsidiary_counts),
cex.names = 0.7,
xlab = "Subsidiary",
ylab = "Count",
main = "Frequency of Subsidiary")
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
subsidiary_counts <- table(IBB$subsidiary)
barplot(subsidiary_counts,
col = "lightpurple",
border = "black",
names.arg = names(subsidiary_counts),
cex.names = 0.7,
xlab = "Subsidiary",
ylab = "Count",
main = "Frequency of Subsidiary")
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
subsidiary_counts <- table(IBB$subsidiary)
barplot(subsidiary_counts,
col = "lightred",
border = "black",
names.arg = names(subsidiary_counts),
cex.names = 0.7,
xlab = "Subsidiary",
ylab = "Count",
main = "Frequency of Subsidiary")
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
subsidiary_counts <- table(IBB$subsidiary)
barplot(subsidiary_counts,
col = "lightblue",
border = "black",
names.arg = names(subsidiary_counts),
cex.names = 0.7,
xlab = "Subsidiary",
ylab = "Count",
main = "Frequency of Subsidiary")
ggplot(IBB, aes(x = subsidiary, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol (chol)") +
ggtitle("Distribution of Cholesterol by Subsidiary")
library(ggplot2)
ggplot(IBB, aes(x = subsidiary, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol (chol)") +
ggtitle("Cholesterol Distribution by Subsidiary")
ggplot(IBB, aes(x = chol, fill = subsidiary)) +
geom_histogram(color = "black", bins = 20) +
xlab("Cholesterol (chol)") +
ylab("Frequency") +
ggtitle("Cholesterol Distribution by Subsidiary")
ggplot(IBB, aes(x = chol, hue =subsidiary)) +
geom_histogram(color = "black", bins = 20) +
xlab("Cholesterol (chol)") +
ylab("Frequency") +
ggtitle("Cholesterol Distribution by Subsidiary")
ggplot(IBB, aes(x = subsidiary, y = as.character(chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol (chol)") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$chol_c <- as.character(chol)
IBB$chol_c <- as.character(IBB$chol)
ggplot(IBB, aes(x = subsidiary, y = chol_c) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol (chol)") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$chol_c <- as.character(IBB$chol)
ggplot(IBB, aes(x = subsidiary, y = chol_c) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol (chol)") +
ggtitle("Cholesterol Distribution by Subsidiary"))
IBB$chol_c <- as.character(IBB$chol)
ggplot(IBB, aes(x = subsidiary, y = chol_c)) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol (chol)") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$chol_c <- as.character(IBB$chol)
ggplot(IBB, aes(x = chol_c, fill = subsidiary)) +
geom_histogram(color = "black", bins = 20) +
xlab("Cholesterol (chol)") +
ylab("Frequency") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$chol_c <- as.character(IBB$chol)
ggplot(IBB, aes(x = chol_c, hue = subsidiary)) +
geom_histogram(color = "black", bins = 20) +
xlab("Cholesterol (chol)") +
ylab("Frequency") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$chol_c <- as.character(IBB$chol)
ggplot(data = IBB, aes(x = chol_c, y = subsidiary)) +
geom_boxplot() +
labs(x = "chol_c分类变量", y = "subsidiary连续变量") +
theme_minimal()
IBB$chol_c <- as.character(IBB$chol)
ggplot(data = IBB, aes(x = subsidiary, y = chol_c)) +
geom_boxplot() +
labs(x = "subsidiary", y = "chol_c") +
theme_minimal()
IBB = read.csv("~/Bayesian/Study1-Cholesterol-Intake-Variability/IBBENS.csv")
head(IBB)
subsidiary_counts <- table(IBB$subsidiary)
barplot(subsidiary_counts,
col = "lightblue",
border = "black",
names.arg = names(subsidiary_counts),
cex.names = 0.7,
xlab = "Subsidiary",
ylab = "Count",
main = "Frequency of Subsidiary")
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(data = IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot() +
labs(x = "subsidiary", y = "chol_c") +
theme_minimal()
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = "mean", geom = "point", size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
ggtitle("Cholesterol Distribution by Subsidiary")
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = "mean", geom = "point", size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
ggtitle("Cholesterol Distribution by Subsidiary")+
theme_minimal()
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = "mean", geom = "point", size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Cholesterol Distribution by Subsidiary")+
theme_minimal()
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightpink", color = "black") +
stat_summary(fun = "mean", geom = "point", size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Cholesterol Distribution by Subsidiary")+
theme_minimal()
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightgreen", color = "black") +
stat_summary(fun = "mean", geom = "point", size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Cholesterol Distribution by Subsidiary")+
theme_minimal()
IBB$subsidiary_c <- as.character(IBB$subsidiary)
ggplot(IBB, aes(x = subsidiary_c, y = chol)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = "mean", geom = "point", size = 3, color = "red")+
xlab("Subsidiary") +
ylab("Cholesterol Intake") +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Cholesterol Distribution by Subsidiary")+
theme_minimal()
